server:
  port: 9999
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    druid:
      url: jdbc:mysql://localhost:3307/Mirna?useSSl=false&&allowMultiQueries=true&useAffectedRows=true #数据库地址
      username: root #用户名
      password: 123456 #密码
      max-active: 20  #连接池最大值
      initial-size: 5 #连接池初始值
      min-idle: 5 #连接池最小空值
      min-evictable-idle-time-millis: 300000
      max-wait: 60000 #最大等待时间
      validation-query: select 1 # 检测连接是否有效时执行的sql命令
      test-on-borrow: false # 借用连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false  #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-while-idle: true # 连接空闲时检测，如果连接空闲时间大于timeBetweenEvictionRunsMillis指定的毫秒，执行validationQuery指定的SQL来检测连接是否有效
      time-between-eviction-runs-millis: 60000 # 空闲连接检查、废弃连接清理、空闲连接池大小调整的操作时间间隔，单位是毫秒(1分钟)
      #监控有关的配置↓
      filters: stat # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connection-properties:
        druid.stat.mergeSql: true
      filter:
        stat:
          slow-sql-millis: 500
        wall:
          config:
            enabled: true
            db-type: mysql
            multi-statement-allow: true
            comment-allow: true
      web-stat-filter:
        enabled: true   #是否启用StatFilter,默认值false，用于采集 web-jdbc 关联监控的数据。
        url-pattern: /*  # 需要监控的url
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico  #是否启用StatFilter默认值false，用于采集 web-jdbc 关联监控的数据。
      stat-view-servlet:
        enabled: true #启用sql监控服务
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: 123456
  redis:
    host: localhost
    port: 6379
    database: 1
  mail:
    protocol: smtp  #邮件协议
    host: smtp.163.com
    port: 25
    username: 私人信息
    password: 私人信息  #授权码
    default-encoding: UTF-8
    properties:
      mail:
        debug: true
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



stukk:
  elasticsearch:
    host: 私人信息
    username: 私人信息
    password: 私人信息
    connectTimeout: 50000
    socketTimeout: 50000
    connectionRequestTimeout: 10000
    maxConnectNum: 100
    maxConnectPerRoute: 100

FromEmail: 私人信息
ToEmail: 私人信息
